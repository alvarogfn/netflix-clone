import{_ as e,c as t,o as i,a}from"./app.b4b70f03.js";const o="/netflix-clone/assets/fluxo-registro.8d6d96c8.png",l="/netflix-clone/assets/diagrama-login.8d7051c5.png",n="/netflix-clone/assets/auto-login.e9e40ca8.png",w=JSON.parse('{"title":"Authentication","description":"","frontmatter":{},"headers":[{"level":2,"title":"Registration","slug":"registration","link":"#registration","children":[]},{"level":2,"title":"Login","slug":"login","link":"#login","children":[]},{"level":2,"title":"Auto-login","slug":"auto-login","link":"#auto-login","children":[]},{"level":2,"title":"Logout","slug":"logout","link":"#logout","children":[]}],"relativePath":"architecture/authentication.md"}'),r={name:"architecture/authentication.md"},s=a('<h1 id="authentication" tabindex="-1">Authentication <a class="header-anchor" href="#authentication" aria-hidden="true">#</a></h1><p>I used a mix of indexedb with localstorage to authenticate. This applied to vue&#39;s router-guards results in a very simple and powerful way to make a login system.</p><h2 id="registration" tabindex="-1">Registration <a class="header-anchor" href="#registration" aria-hidden="true">#</a></h2><p><img src="'+o+'" alt="Register"></p><ol><li>When a user registers in the application, a new document with his data is inserted in the indexedb.</li><li>If the email he entered already exists, the application will do nothing.</li><li>If the registration is successful, the user will be redirected to the movie catalog screen.</li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>your email/password details will be saved in localStorage for auto-login.</p></div><h2 id="login" tabindex="-1">Login <a class="header-anchor" href="#login" aria-hidden="true">#</a></h2><p><img src="'+l+'" alt="Register"></p><p>When the user fills in the login form, if all the data is correct, it will be saved in localstorage and the user will be redirected to /browse</p><h2 id="auto-login" tabindex="-1">Auto-login <a class="header-anchor" href="#auto-login" aria-hidden="true">#</a></h2><p><img src="'+n+'" alt="Register"></p><p>Whenever the user reloads the page, the router will fetch the elements saved in localStorage, fill in the Login store and continue the flow.</p><p>If there is no data in the localstorage, or the data is invalid, it will be removed and the user will be redirected to netflix home screen</p><h2 id="logout" tabindex="-1">Logout <a class="header-anchor" href="#logout" aria-hidden="true">#</a></h2><p>The app&#39;s store login will be fully reset, and the login and password will be removed from localstorage.</p>',15),d=[s];function c(h,g,u,p,f,_){return i(),t("div",null,d)}const b=e(r,[["render",c]]);export{w as __pageData,b as default};
