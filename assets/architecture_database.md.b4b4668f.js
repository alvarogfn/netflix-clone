import{_ as e,c as a,o as t,a as i}from"./app.b4b70f03.js";const s="/netflix-clone/assets/modelagem-ER.4db35056.png",u=JSON.parse('{"title":"Indexedb Database With Dexie","description":"","frontmatter":{},"headers":[{"level":2,"title":"ER database modeling","slug":"er-database-modeling","link":"#er-database-modeling","children":[]}],"relativePath":"architecture/database.md"}'),d={name:"architecture/database.md"},l=i('<h1 id="indexedb-database-with-dexie" tabindex="-1">Indexedb Database With Dexie <a class="header-anchor" href="#indexedb-database-with-dexie" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The diagram exemplifies a relational database, so it is not fully interoperable with indexedb, which is more like a document-type database.</p><p>Regardless, it&#39;s a good starting point for explaining how I&#39;ve linked the documents in indexedb.</p></div><h2 id="er-database-modeling" tabindex="-1">ER database modeling <a class="header-anchor" href="#er-database-modeling" aria-hidden="true">#</a></h2><ul><li>Fields with &#39;*&#39;&#39; are multivalued fields. indexed allows indexing by lists of values.</li><li>Fields with &#39;&amp;&#39; are unique fields. It is similar to <strong>unique</strong> from sql schema.</li></ul><p><img src="'+s+'" alt="Modelagem"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The views field is better explained in <a href="./metrics.html">metrics</a>.</p></div>',6),n=[l];function o(r,c,h,m,p,b){return t(),a("div",null,n)}const g=e(d,[["render",o]]);export{u as __pageData,g as default};
