import{_ as e,c as s,o as t,a}from"./app.b4b70f03.js";const v=JSON.parse('{"title":"Dependencies","description":"","frontmatter":{},"headers":[{"level":2,"title":"Vue 3","slug":"vue-3","link":"#vue-3","children":[]},{"level":2,"title":"Dexie","slug":"dexie","link":"#dexie","children":[]},{"level":2,"title":"Vitest and Cypress","slug":"vitest-and-cypress","link":"#vitest-and-cypress","children":[]},{"level":2,"title":"Sass","slug":"sass","link":"#sass","children":[]},{"level":2,"title":"Vitepress","slug":"vitepress","link":"#vitepress","children":[]}],"relativePath":"requirements/dependencies.md"}'),i={name:"requirements/dependencies.md"},r=a('<h1 id="dependencies" tabindex="-1">Dependencies <a class="header-anchor" href="#dependencies" aria-hidden="true">#</a></h1><h2 id="vue-3" tabindex="-1">Vue 3 <a class="header-anchor" href="#vue-3" aria-hidden="true">#</a></h2><p>Vue Js is a very light and pleasant framework to use. It&#39;s very opinionated in its folder and component structure, plus it comes with global state management, and a routing library.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>In development, I ended up not using typescript or the Composition API.</p></div><h2 id="dexie" tabindex="-1">Dexie <a class="header-anchor" href="#dexie" aria-hidden="true">#</a></h2><p>Dexie is a local database that works with the Browser&#39;s indexedb API, which is very similar to a MongoDB database.</p><h2 id="vitest-and-cypress" tabindex="-1">Vitest and Cypress <a class="header-anchor" href="#vitest-and-cypress" aria-hidden="true">#</a></h2><p>Both viteste and cypress are libraries that come by default in the vue scaffold.</p><ul><li>The vitest for unit tests;</li><li>Cypress for e2e tests;</li></ul><p>::: error Unfortunately, this was a test requirement that I ended up not implementing. :::</p><h2 id="sass" tabindex="-1">Sass <a class="header-anchor" href="#sass" aria-hidden="true">#</a></h2><p>Sass is a CSS preprocessor that extends the functionality of standard CSS3.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>I also used the BEM class naming methodology for most of the components. And the CSS library normalizes to ensure style consistency across browsers.</p></div><h2 id="vitepress" tabindex="-1">Vitepress <a class="header-anchor" href="#vitepress" aria-hidden="true">#</a></h2><p>Vitepress is a Static Site Generator that I used to build the software documentation.</p>',15),n=[r];function d(o,l,c,h,p,u){return t(),s("div",null,n)}const _=e(i,[["render",d]]);export{v as __pageData,_ as default};
